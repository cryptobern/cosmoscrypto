{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0","program":"/home/sh4d0/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ark_serialize","--edition=2018","/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"ark-serialize-derive\"","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","-C","metadata=c3d7e2298800d033","-C","extra-filename=-c3d7e2298800d033","--out-dir","/home/sh4d0/Documents/rust_crypto/target/rls/debug/deps","-L","dependency=/home/sh4d0/Documents/rust_crypto/target/rls/debug/deps","--extern","ark_serialize_derive=/home/sh4d0/Documents/rust_crypto/target/rls/debug/deps/libark_serialize_derive-a122d4dc6be2c6c4.so","--extern","ark_std=/home/sh4d0/Documents/rust_crypto/target/rls/debug/deps/libark_std-d1430656ba74987d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sh4d0/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sh4d0/Documents/rust_crypto/target/rls/debug/deps/libark_serialize-c3d7e2298800d033.rmeta"},"prelude":{"crate_id":{"name":"ark_serialize","disambiguator":[13108453145338224101,769059439810079448]},"crate_root":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src","external_crates":[{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[1111923456158047016,16902919259693091653]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4206559302939301148,6164973543688958239]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5256837966271238037,14624209252821231605]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":4,"id":{"name":"ark_std","disambiguator":[13399921079164838224,15760435441559865094]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":5,"id":{"name":"std","disambiguator":[17255007459673538994,10308005785557406899]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":6,"id":{"name":"alloc","disambiguator":[7550531950105187004,8150571798412653191]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":7,"id":{"name":"libc","disambiguator":[15335445469838442753,9552689356239597613]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":8,"id":{"name":"unwind","disambiguator":[16502730494113453331,739642837530493346]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17056567370692029606,5237526203530126554]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":10,"id":{"name":"hashbrown","disambiguator":[14937216707889756020,8824175777475717960]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17577480307990758245,11665649631686256755]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[10532265776820743552,12261914965731844528]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":13,"id":{"name":"std_detect","disambiguator":[15918998743166050901,5153345746580364318]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":14,"id":{"name":"addr2line","disambiguator":[13847123446638245357,191099483651108540]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":15,"id":{"name":"gimli","disambiguator":[8535951946701118478,247082403716274271]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":16,"id":{"name":"object","disambiguator":[8071155208203251459,9749237191716311885]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[10993643928529734294,4550819794165110057]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":18,"id":{"name":"adler","disambiguator":[3520407426629514955,6784388313453073637]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[947612539730288161,7851933247975044788]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":20,"id":{"name":"rand","disambiguator":[1006732750152458233,9921853336889347615]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":21,"id":{"name":"rand_core","disambiguator":[2125379998865956030,17590095653964144079]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":22,"id":{"name":"rand_chacha","disambiguator":[3817536576923473965,9772945796447194787]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":23,"id":{"name":"ppv_lite86","disambiguator":[11457772223535652737,15654049662298332471]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","num":24,"id":{"name":"rand_xorshift","disambiguator":[16690751446886189977,17695093863436296293]}},{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","num":25,"id":{"name":"ark_serialize_derive","disambiguator":[8963085803023794090,1078698877763337297]}}],"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":0,"byte_end":30850,"line_start":1,"line_end":1027,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":4259},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":187,"byte_end":191,"line_start":7,"line_end":7,"column_start":23,"column_end":27},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":4320},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":193,"byte_end":198,"line_start":7,"line_end":7,"column_start":29,"column_end":34},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":369,"byte_end":370,"line_start":16,"line_end":16,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"SerializationError","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":387,"byte_end":388,"line_start":17,"line_end":17,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"Flags","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":463,"byte_end":464,"line_start":21,"line_end":21,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":0,"byte_end":30850,"line_start":1,"line_end":1027,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":17},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":90},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":111},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":140},{"krate":0,"index":150},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":364},{"krate":0,"index":373},{"krate":0,"index":380},{"krate":0,"index":391},{"krate":0,"index":400},{"krate":0,"index":412},{"krate":0,"index":422},{"krate":0,"index":435},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":181},{"krate":0,"index":190},{"krate":0,"index":200},{"krate":0,"index":208},{"krate":0,"index":218},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":248},{"krate":0,"index":257},{"krate":0,"index":269}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":34,"byte_end":40,"line_start":1,"line_end":1,"column_start":35,"column_end":41}},{"value":"warn(unused, future_incompatible, nonstandard_style, rust_2018_idioms)","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":43,"byte_end":117,"line_start":2,"line_end":2,"column_start":1,"column_end":75}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":118,"byte_end":141,"line_start":3,"line_end":3,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":278},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31066,"byte_end":31080,"line_start":7,"line_end":7,"column_start":5,"column_end":19},"name":"NotEnoughSpace","qualname":"::error::SerializationError::NotEnoughSpace","value":"SerializationError::NotEnoughSpace","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" During serialization, we didn't have enough space to write extra info.\n","sig":null,"attributes":[{"value":"/ During serialization, we didn't have enough space to write extra info.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":30987,"byte_end":31061,"line_start":6,"line_end":6,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":280},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31138,"byte_end":31149,"line_start":9,"line_end":9,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::error::SerializationError::InvalidData","value":"SerializationError::InvalidData","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" During serialization, the data was invalid.\n","sig":null,"attributes":[{"value":"/ During serialization, the data was invalid.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31086,"byte_end":31133,"line_start":8,"line_end":8,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":282},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31246,"byte_end":31261,"line_start":12,"line_end":12,"column_start":5,"column_end":20},"name":"UnexpectedFlags","qualname":"::error::SerializationError::UnexpectedFlags","value":"SerializationError::UnexpectedFlags","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" During serialization, non-empty flags were given where none were\n expected.\n","sig":null,"attributes":[{"value":"/ During serialization, non-empty flags were given where none were","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31155,"byte_end":31223,"line_start":10,"line_end":10,"column_start":5,"column_end":73}},{"value":"/ expected.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31228,"byte_end":31241,"line_start":11,"line_end":11,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31324,"byte_end":31331,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::SerializationError::IoError","value":"SerializationError::IoError(io::Error)","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" During serialization, we countered an I/O error.\n","sig":null,"attributes":[{"value":"/ During serialization, we countered an I/O error.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31267,"byte_end":31319,"line_start":13,"line_end":13,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":277},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":30962,"byte_end":30980,"line_start":5,"line_end":5,"column_start":10,"column_end":28},"name":"SerializationError","qualname":"::error::SerializationError","value":"pub enum SerializationError {\n    NotEnoughSpace,\n    InvalidData,\n    UnexpectedFlags,\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"decl_id":null,"docs":" This is an error that could occur during serialization\n","sig":null,"attributes":[{"value":"/ This is an error that could occur during serialization","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":30877,"byte_end":30935,"line_start":3,"line_end":3,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32685,"byte_end":32690,"line_start":10,"line_end":10,"column_start":11,"column_end":16},"name":"Flags","qualname":"::flags::Flags","value":"Flags: Default + Clone + Copy + Sized","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" Represents metadata to be appended to an object's serialization. For\n example, when serializing elliptic curve points, one can\n use a `Flag` to represent whether the serialization is the point\n at infinity, or whether the `y` coordinate is positive or not.\n These bits will be appended to the end of the point's serialization,\n or included in a new byte, depending on space available.","sig":null,"attributes":[{"value":"/ Represents metadata to be appended to an object's serialization. For","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32161,"byte_end":32233,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ example, when serializing elliptic curve points, one can","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32234,"byte_end":32294,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/ use a `Flag` to represent whether the serialization is the point","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32295,"byte_end":32363,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ at infinity, or whether the `y` coordinate is positive or not.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32364,"byte_end":32430,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ These bits will be appended to the end of the point's serialization,","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32431,"byte_end":32503,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ or included in a new byte, depending on space available.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32504,"byte_end":32564,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32565,"byte_end":32568,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is meant to be provided to `CanonicalSerializeWithFlags` and","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32569,"byte_end":32638,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `CanonicalDeserializeWithFlags`","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32639,"byte_end":32674,"line_start":9,"line_end":9,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32823,"byte_end":32831,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"BIT_SIZE","qualname":"::flags::Flags::BIT_SIZE","value":"usize","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" The number of bits required to encode `Self`.\n This should be at most 8.\n","sig":null,"attributes":[{"value":"/ The number of bits required to encode `Self`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32729,"byte_end":32778,"line_start":11,"line_end":11,"column_start":5,"column_end":54}},{"value":"/ This should be at most 8.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32783,"byte_end":32812,"line_start":12,"line_end":12,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":33016,"byte_end":33026,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"u8_bitmask","qualname":"::flags::Flags::u8_bitmask","value":"pub fn u8_bitmask(&Self) -> u8","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":33409,"byte_end":33416,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::flags::Flags::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":33738,"byte_end":33758,"line_start":32,"line_end":32,"column_start":8,"column_end":28},"name":"from_u8_remove_flags","qualname":"::flags::Flags::from_u8_remove_flags","value":"pub fn from_u8_remove_flags(&mut u8) -> Option<Self>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34047,"byte_end":34057,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"EmptyFlags","qualname":"::flags::EmptyFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flags to be encoded into the serialization.\n","sig":null,"attributes":[{"value":"/ Flags to be encoded into the serialization.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":33941,"byte_end":33988,"line_start":41,"line_end":41,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34539,"byte_end":34547,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"Infinity","qualname":"::flags::SWFlags::Infinity","value":"SWFlags::Infinity","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34553,"byte_end":34562,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"PositiveY","qualname":"::flags::SWFlags::PositiveY","value":"SWFlags::PositiveY","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34568,"byte_end":34577,"line_start":69,"line_end":69,"column_start":5,"column_end":14},"name":"NegativeY","qualname":"::flags::SWFlags::NegativeY","value":"SWFlags::NegativeY","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":302},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34525,"byte_end":34532,"line_start":66,"line_end":66,"column_start":10,"column_end":17},"name":"SWFlags","qualname":"::flags::SWFlags","value":"pub enum SWFlags { Infinity, PositiveY, NegativeY, }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307}],"decl_id":null,"docs":" Flags to be encoded into the serialization.\n The default flags (empty) should not change the binary representation.\n","sig":null,"attributes":[{"value":"/ Flags to be encoded into the serialization.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34355,"byte_end":34402,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/ The default flags (empty) should not change the binary representation.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34403,"byte_end":34477,"line_start":64,"line_end":64,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34622,"byte_end":34630,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"infinity","qualname":"<SWFlags>::infinity","value":"pub fn infinity() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34601,"byte_end":34610,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34701,"byte_end":34712,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"from_y_sign","qualname":"<SWFlags>::from_y_sign","value":"pub fn from_y_sign(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34680,"byte_end":34689,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34888,"byte_end":34899,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<SWFlags>::is_infinity","value":"pub fn is_infinity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34867,"byte_end":34876,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34991,"byte_end":35002,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<SWFlags>::is_positive","value":"pub fn is_positive(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34970,"byte_end":34979,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":319},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36368,"byte_end":36377,"line_start":143,"line_end":143,"column_start":5,"column_end":14},"name":"PositiveY","qualname":"::flags::EdwardsFlags::PositiveY","value":"EdwardsFlags::PositiveY","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36383,"byte_end":36392,"line_start":144,"line_end":144,"column_start":5,"column_end":14},"name":"NegativeY","qualname":"::flags::EdwardsFlags::NegativeY","value":"EdwardsFlags::NegativeY","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":318},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36349,"byte_end":36361,"line_start":142,"line_end":142,"column_start":10,"column_end":22},"name":"EdwardsFlags","qualname":"::flags::EdwardsFlags","value":"pub enum EdwardsFlags { PositiveY, NegativeY, }","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":321}],"decl_id":null,"docs":" Flags to be encoded into the serialization.\n The default flags (empty) should not change the binary representation.\n","sig":null,"attributes":[{"value":"/ Flags to be encoded into the serialization.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36179,"byte_end":36226,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/ The default flags (empty) should not change the binary representation.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36227,"byte_end":36301,"line_start":140,"line_end":140,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36442,"byte_end":36453,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"from_y_sign","qualname":"<EdwardsFlags>::from_y_sign","value":"pub fn from_y_sign(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36421,"byte_end":36430,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36639,"byte_end":36650,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<EdwardsFlags>::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36618,"byte_end":36627,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":542,"byte_end":569,"line_start":24,"line_end":24,"column_start":11,"column_end":38},"name":"CanonicalSerializeWithFlags","qualname":"::CanonicalSerializeWithFlags","value":"CanonicalSerializeWithFlags: CanonicalSerialize","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":88}],"decl_id":null,"docs":" Serializer in little endian format allowing to encode flags.\n","sig":null,"attributes":[{"value":"/ Serializer in little endian format allowing to encode flags.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":467,"byte_end":531,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":652,"byte_end":672,"line_start":26,"line_end":26,"column_start":8,"column_end":28},"name":"serialize_with_flags","qualname":"::CanonicalSerializeWithFlags::serialize_with_flags","value":"pub fn serialize_with_flags<W: Write, F: Flags>(&Self, W, F)\n-> Result<(), SerializationError>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Serializes `self` and `flags` into `writer`.\n","sig":null,"attributes":[{"value":"/ Serializes `self` and `flags` into `writer`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":596,"byte_end":644,"line_start":25,"line_end":25,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":848,"byte_end":874,"line_start":33,"line_end":33,"column_start":8,"column_end":34},"name":"serialized_size_with_flags","qualname":"::CanonicalSerializeWithFlags::serialized_size_with_flags","value":"pub fn serialized_size_with_flags<F: Flags>(&Self) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Serializes `self` and `flags` into `writer`.\n","sig":null,"attributes":[{"value":"/ Serializes `self` and `flags` into `writer`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":792,"byte_end":840,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1833,"byte_end":1851,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"CanonicalSerialize","qualname":"::CanonicalSerialize","value":"CanonicalSerialize","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"decl_id":null,"docs":" Serializer in little endian format.\n The serialization format must be 'length-extension' safe.\n e.g. if T implements Canonical Serialize and Deserialize,\n then for all strings `x, y`, if `a = T::deserialize(Reader(x))` and `a` is not an error,\n then it must be the case that `a = T::deserialize(Reader(x || y))`,\n and that both readers read the same number of bytes.","sig":null,"attributes":[{"value":"/ Serializer in little endian format.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":905,"byte_end":944,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ The serialization format must be 'length-extension' safe.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":945,"byte_end":1006,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ e.g. if T implements Canonical Serialize and Deserialize,","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1007,"byte_end":1068,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ then for all strings `x, y`, if `a = T::deserialize(Reader(x))` and `a` is not an error,","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1069,"byte_end":1161,"line_start":39,"line_end":39,"column_start":1,"column_end":93}},{"value":"/ then it must be the case that `a = T::deserialize(Reader(x || y))`,","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1162,"byte_end":1233,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ and that both readers read the same number of bytes.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1234,"byte_end":1290,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1291,"byte_end":1294,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This trait can be derived if all fields of a struct implement","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1295,"byte_end":1360,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/ `CanonicalSerialize` and the `derive` feature is enabled.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1361,"byte_end":1422,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1423,"byte_end":1426,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1427,"byte_end":1440,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1441,"byte_end":1448,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ // The `derive` feature must be set for the derivation to work.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1449,"byte_end":1516,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ use ark_serialize::*;","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1517,"byte_end":1542,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1543,"byte_end":1546,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"derive\")]","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1547,"byte_end":1579,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ #[derive(CanonicalSerialize)]","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1580,"byte_end":1613,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ struct TestStruct {","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1614,"byte_end":1637,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/     a: u64,","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1638,"byte_end":1653,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     b: (u64, (u64, u64)),","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1654,"byte_end":1683,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1684,"byte_end":1689,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1690,"byte_end":1697,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1698,"byte_end":1701,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If your code depends on `algebra` instead, the example works analogously","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1702,"byte_end":1778,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ when importing `algebra::serialize::*`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1779,"byte_end":1822,"line_start":60,"line_end":60,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2437,"byte_end":2446,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"serialize","qualname":"::CanonicalSerialize::serialize","value":"pub fn serialize<W: Write>(&Self, W) -> Result<(), SerializationError>","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Serializes `self` into `writer`.\n It is left up to a particular type for how it strikes the\n serialization efficiency vs compression tradeoff.\n For standard types (e.g. `bool`, lengths, etc.) typically an uncompressed\n form is used, whereas for algebraic types compressed forms are used.","sig":null,"attributes":[{"value":"/ Serializes `self` into `writer`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1858,"byte_end":1894,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/ It is left up to a particular type for how it strikes the","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1899,"byte_end":1960,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/ serialization efficiency vs compression tradeoff.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":1965,"byte_end":2018,"line_start":64,"line_end":64,"column_start":5,"column_end":58}},{"value":"/ For standard types (e.g. `bool`, lengths, etc.) typically an uncompressed","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2023,"byte_end":2100,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ form is used, whereas for algebraic types compressed forms are used.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2105,"byte_end":2177,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2182,"byte_end":2185,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Particular examples of interest:","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2190,"byte_end":2226,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ `bool` - 1 byte encoding","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2231,"byte_end":2259,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ uints - Direct encoding","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2264,"byte_end":2291,"line_start":70,"line_end":70,"column_start":5,"column_end":32}},{"value":"/ Length prefixing (for any container implemented by default) - 8 byte encoding","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2296,"byte_end":2377,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ Elliptic curves - compressed point encoding","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2382,"byte_end":2429,"line_start":72,"line_end":72,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2518,"byte_end":2533,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::CanonicalSerialize::serialized_size","value":"pub fn serialized_size(&Self) -> usize","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2634,"byte_end":2656,"line_start":79,"line_end":79,"column_start":8,"column_end":30},"name":"serialize_uncompressed","qualname":"::CanonicalSerialize::serialize_uncompressed","value":"pub fn serialize_uncompressed<W: Write>(&Self, W)\n-> Result<(), SerializationError>","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Serializes `self` into `writer` without compression.\n","sig":null,"attributes":[{"value":"/ Serializes `self` into `writer` without compression.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2556,"byte_end":2612,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2617,"byte_end":2626,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2986,"byte_end":3005,"line_start":87,"line_end":87,"column_start":8,"column_end":27},"name":"serialize_unchecked","qualname":"::CanonicalSerialize::serialize_unchecked","value":"pub fn serialize_unchecked<W: Write>(&Self, W)\n-> Result<(), SerializationError>","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Serializes `self` into `writer` without compression, and without\n performing validity checks. Should be used *only* when there is no\n danger of adversarial manipulation of the output.\n","sig":null,"attributes":[{"value":"/ Serializes `self` into `writer` without compression, and without","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2763,"byte_end":2831,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/ performing validity checks. Should be used *only* when there is no","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2836,"byte_end":2906,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ danger of adversarial manipulation of the output.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2911,"byte_end":2964,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":2969,"byte_end":2978,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3142,"byte_end":3159,"line_start":92,"line_end":92,"column_start":8,"column_end":25},"name":"uncompressed_size","qualname":"::CanonicalSerialize::uncompressed_size","value":"pub fn uncompressed_size(&Self) -> usize","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3125,"byte_end":3134,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3299,"byte_end":3328,"line_start":98,"line_end":98,"column_start":11,"column_end":40},"name":"CanonicalDeserializeWithFlags","qualname":"::CanonicalDeserializeWithFlags","value":"CanonicalDeserializeWithFlags: Sized","parent":null,"children":[{"krate":0,"index":100}],"decl_id":null,"docs":" Deserializer in little endian format allowing flags to be encoded.\n","sig":null,"attributes":[{"value":"/ Deserializer in little endian format allowing flags to be encoded.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3218,"byte_end":3288,"line_start":97,"line_end":97,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3433,"byte_end":3455,"line_start":101,"line_end":101,"column_start":8,"column_end":30},"name":"deserialize_with_flags","qualname":"::CanonicalDeserializeWithFlags::deserialize_with_flags","value":"pub fn deserialize_with_flags<R: Read, F: Flags>(R)\n-> Result<(Self, F), SerializationError>","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reads `Self` and `Flags` from `reader`.\n Returns empty flags by default.\n","sig":null,"attributes":[{"value":"/ Reads `Self` and `Flags` from `reader`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3342,"byte_end":3385,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ Returns empty flags by default.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3390,"byte_end":3425,"line_start":100,"line_end":100,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4130,"byte_end":4150,"line_start":125,"line_end":125,"column_start":11,"column_end":31},"name":"CanonicalDeserialize","qualname":"::CanonicalDeserialize","value":"CanonicalDeserialize: Sized","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108}],"decl_id":null,"docs":" Deserializer in little endian format.\n This trait can be derived if all fields of a struct implement\n `CanonicalDeserialize` and the `derive` feature is enabled.","sig":null,"attributes":[{"value":"/ Deserializer in little endian format.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3546,"byte_end":3587,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ This trait can be derived if all fields of a struct implement","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3588,"byte_end":3653,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/ `CanonicalDeserialize` and the `derive` feature is enabled.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3654,"byte_end":3717,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3718,"byte_end":3721,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3722,"byte_end":3735,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3736,"byte_end":3743,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ // The `derive` feature must be set for the derivation to work.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3744,"byte_end":3811,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"/ use ark_serialize::*;","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3812,"byte_end":3837,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3838,"byte_end":3841,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"derive\")]","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3842,"byte_end":3874,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"/ #[derive(CanonicalDeserialize)]","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3875,"byte_end":3910,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/ struct TestStruct {","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3911,"byte_end":3934,"line_start":117,"line_end":117,"column_start":1,"column_end":24}},{"value":"/     a: u64,","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3935,"byte_end":3950,"line_start":118,"line_end":118,"column_start":1,"column_end":16}},{"value":"/     b: (u64, (u64, u64)),","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3951,"byte_end":3980,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3981,"byte_end":3986,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3987,"byte_end":3994,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3995,"byte_end":3998,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ If your code depends on `algebra` instead, the example works analogously","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3999,"byte_end":4075,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ when importing `algebra::serialize::*`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4076,"byte_end":4119,"line_start":124,"line_end":124,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4203,"byte_end":4214,"line_start":127,"line_end":127,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::CanonicalDeserialize::deserialize","value":"pub fn deserialize<R: Read>(R) -> Result<Self, SerializationError>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Reads `Self` from `reader`.\n","sig":null,"attributes":[{"value":"/ Reads `Self` from `reader`.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4164,"byte_end":4195,"line_start":126,"line_end":126,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4350,"byte_end":4374,"line_start":131,"line_end":131,"column_start":8,"column_end":32},"name":"deserialize_uncompressed","qualname":"::CanonicalDeserialize::deserialize_uncompressed","value":"pub fn deserialize_uncompressed<R: Read>(R)\n-> Result<Self, SerializationError>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Reads `Self` from `reader` without compression.\n","sig":null,"attributes":[{"value":"/ Reads `Self` from `reader` without compression.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4277,"byte_end":4328,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4333,"byte_end":4342,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4648,"byte_end":4669,"line_start":138,"line_end":138,"column_start":8,"column_end":29},"name":"deserialize_unchecked","qualname":"::CanonicalDeserialize::deserialize_unchecked","value":"pub fn deserialize_unchecked<R: Read>(R) -> Result<Self, SerializationError>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Reads `self` from `reader` without compression, and without performing\n validity checks. Should be used *only* when the input is trusted.\n","sig":null,"attributes":[{"value":"/ Reads `self` from `reader` without compression, and without performing","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4478,"byte_end":4552,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ validity checks. Should be used *only* when the input is trusted.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4557,"byte_end":4626,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4631,"byte_end":4640,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":10219,"byte_end":10239,"line_start":328,"line_end":328,"column_start":8,"column_end":28},"name":"buffer_bit_byte_size","qualname":"::buffer_bit_byte_size","value":"pub fn buffer_bit_byte_size(usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":10202,"byte_end":10211,"line_start":327,"line_end":327,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":10510,"byte_end":10526,"line_start":336,"line_end":336,"column_start":14,"column_end":30},"name":"buffer_byte_size","qualname":"::buffer_byte_size","value":"pub const fn buffer_byte_size(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts the number of bits required to represent a number\n into the number of bytes required to represent it.\n","sig":null,"attributes":[{"value":"/ Converts the number of bits required to represent a number","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":10369,"byte_end":10431,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/ into the number of bytes required to represent it.","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":10432,"byte_end":10486,"line_start":334,"line_end":334,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":10487,"byte_end":10496,"line_start":335,"line_end":335,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31378,"byte_end":31396,"line_start":17,"line_end":17,"column_start":32,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31426,"byte_end":31444,"line_start":19,"line_end":19,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31567,"byte_end":31585,"line_start":25,"line_end":25,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34075,"byte_end":34085,"line_start":45,"line_end":45,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34587,"byte_end":34594,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":35217,"byte_end":35224,"line_start":102,"line_end":102,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":35373,"byte_end":35380,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36402,"byte_end":36414,"line_start":147,"line_end":147,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36816,"byte_end":36828,"line_start":166,"line_end":166,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36982,"byte_end":36994,"line_start":174,"line_end":174,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":6586,"byte_end":6592,"line_start":200,"line_end":200,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":6904,"byte_end":6910,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":8492,"byte_end":8495,"line_start":268,"line_end":268,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":9248,"byte_end":9251,"line_start":295,"line_end":295,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":12880,"byte_end":12891,"line_start":412,"line_end":412,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":13136,"byte_end":13147,"line_start":424,"line_end":424,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":13420,"byte_end":13423,"line_start":432,"line_end":432,"column_start":66,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":14138,"byte_end":14141,"line_start":458,"line_end":458,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":14982,"byte_end":14988,"line_start":485,"line_end":485,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":16369,"byte_end":16375,"line_start":537,"line_end":537,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":17439,"byte_end":17441,"line_start":576,"line_end":576,"column_start":52,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":18211,"byte_end":18213,"line_start":603,"line_end":603,"column_start":56,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":19631,"byte_end":19639,"line_start":653,"line_end":653,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":21123,"byte_end":21131,"line_start":703,"line_end":703,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":22454,"byte_end":22462,"line_start":743,"line_end":743,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":23727,"byte_end":23735,"line_start":786,"line_end":786,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31378,"byte_end":31396,"line_start":17,"line_end":17,"column_start":32,"column_end":50},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":277},"to":{"krate":5,"index":2326}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31426,"byte_end":31444,"line_start":19,"line_end":19,"column_start":26,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/error.rs","byte_start":31567,"byte_end":31585,"line_start":25,"line_end":25,"column_start":23,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":8812}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32692,"byte_end":32699,"line_start":10,"line_end":10,"column_start":18,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2810},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32702,"byte_end":32707,"line_start":10,"line_end":10,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":2457},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32710,"byte_end":32714,"line_start":10,"line_end":10,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2842},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":32717,"byte_end":32722,"line_start":10,"line_end":10,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":2837},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34075,"byte_end":34085,"line_start":45,"line_end":45,"column_start":16,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":289},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":34587,"byte_end":34594,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":35217,"byte_end":35224,"line_start":102,"line_end":102,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":302},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":35373,"byte_end":35380,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36402,"byte_end":36414,"line_start":147,"line_end":147,"column_start":6,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36816,"byte_end":36828,"line_start":166,"line_end":166,"column_start":18,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":318},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/flags.rs","byte_start":36982,"byte_end":36994,"line_start":174,"line_end":174,"column_start":16,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":318},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":571,"byte_end":589,"line_start":24,"line_end":24,"column_start":40,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":90},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":3330,"byte_end":3335,"line_start":98,"line_end":98,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":1,"index":2837},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":4152,"byte_end":4157,"line_start":125,"line_end":125,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2837},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":6586,"byte_end":6592,"line_start":200,"line_end":200,"column_start":29,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":6,"index":7285},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":6904,"byte_end":6910,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":6,"index":7285},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":8492,"byte_end":8495,"line_start":268,"line_end":268,"column_start":52,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":6,"index":6772},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":9248,"byte_end":9251,"line_start":295,"line_end":295,"column_start":56,"column_end":59},"kind":{"Impl":{"id":15}},"from":{"krate":6,"index":6772},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":12880,"byte_end":12891,"line_start":412,"line_end":412,"column_start":46,"column_end":57},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":2850},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":13136,"byte_end":13147,"line_start":424,"line_end":424,"column_start":48,"column_end":59},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":2850},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":13420,"byte_end":13423,"line_start":432,"line_end":432,"column_start":66,"column_end":69},"kind":{"Impl":{"id":18}},"from":{"krate":6,"index":543},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":14138,"byte_end":14141,"line_start":458,"line_end":458,"column_start":38,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":6,"index":543},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":14982,"byte_end":14988,"line_start":485,"line_end":485,"column_start":52,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":39710},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":16369,"byte_end":16375,"line_start":537,"line_end":537,"column_start":56,"column_end":62},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":39710},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":17439,"byte_end":17441,"line_start":576,"line_end":576,"column_start":52,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":6,"index":4384},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":18211,"byte_end":18213,"line_start":603,"line_end":603,"column_start":56,"column_end":58},"kind":{"Impl":{"id":23}},"from":{"krate":6,"index":4384},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":19631,"byte_end":19639,"line_start":653,"line_end":653,"column_start":35,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":6,"index":1219},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":21123,"byte_end":21131,"line_start":703,"line_end":703,"column_start":37,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":6,"index":1219},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":22454,"byte_end":22462,"line_start":743,"line_end":743,"column_start":52,"column_end":60},"kind":{"Impl":{"id":28}},"from":{"krate":6,"index":7143},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/sh4d0/.cargo/registry/src/github.com-1ecc6299db9ec823/ark-serialize-0.2.0/src/lib.rs","byte_start":23727,"byte_end":23735,"line_start":786,"line_end":786,"column_start":62,"column_end":70},"kind":{"Impl":{"id":29}},"from":{"krate":6,"index":7143},"to":{"krate":0,"index":103}}]}